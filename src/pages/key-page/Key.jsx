import React from "react";
import { keyCode1 } from "../../ImportCode";
import "../../styles/myProject.css";

const Key = () => {
  return (
    <>
      <h2> Key</h2>
      <p>
        Ключи помогают React определять, какие элементы были изменены, добавлены
        или удалены. Если числа из массива выводить через цикл или через Map
        нужно указывать key чтобы React понимал что это различные элементы и
        ререндерил их:
      </p>
      <pre>
        <code className="codeStyle">{keyCode1}</code>
      </pre>
      <p>
        Key это не props, это атрибут.Ключи должны быть уникальными среди
        соседних элементов. Лучший способ выбрать ключ — это использовать
        строку, которая будет явно отличать элемент списка от его соседей. Чаще
        всего используется ID, который приходит из базы данных с сервера, когда
        ID нет можно использовать Index
      </p>
      <p>
        Ключи нужно определять непосредственно внутри массивов.Без key механизм
        reconciliation сверяет компоненты попарно между текущим и новым VDOM.
        Из-за этого может происходить большое количество лишних перерисовок
        интерфейса, что замедляет работу приложения.
      </p>
      <p>
        Добавляя key, вы помогаете механизму reconciliation тем, что с key он
        сверяет не попарно, а ищет компоненты с тем же key (тег / имя компонента
        при этом учитывается) — это уменьшает количество перерисовок интерфейса.
        Обновлены/добавлены будут только те элементы, которые были изменены/не
        встречались в предыдущем дереве.
      </p>
      <p>
        Следите, чтобы не появлялись дублирующие key, при переключении
        отображения у новых данных не совпадали ключи. Это может привести к
        нежелательным сайд-эффектам, таким как анимации, или некорректной логике
        поведения элемента.
      </p>
    </>
  );
};
export default Key;
